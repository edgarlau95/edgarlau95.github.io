<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>3D运动学/动力学</title>
    <url>/2024/12/23/3d_machinery/</url>
    <content><![CDATA[<p>本博客介绍六自由度刚体在三维空间中的运动学和动力学原理，同时会在本文引入常见的符号，作为后续文章的基础。</p>
<span id="more"></span>
<h3 id="向量的参数化表示">向量的参数化表示</h3>
<p>由于三维空间由三个正交的基底张成，因此三维空间的任意一个坐标系<span class="math inline">\(F_i\)</span>都可以表示为如下矩阵： <span class="math display">\[
\begin{equation}
F_i=\left[e_{i1},e_{i2},e_{i3}\right]
\end{equation}
\]</span> 其中<span class="math inline">\(e_{ij}\)</span>可以视为坐标系<span class="math inline">\(F_i\)</span>的第<span class="math inline">\(j\)</span>个基底。对于三维空间中的任意一个向量<span class="math inline">\(r\)</span>，在坐标系<span class="math inline">\(F_i\)</span>中都有唯一的参数化表示： <span class="math display">\[
\begin{equation}
r=F_i{r}_i
\end{equation}
\]</span> 假设向量<span class="math inline">\(r\)</span>在坐标系<span class="math inline">\(F_1\)</span>和<span class="math inline">\(F_2\)</span>中向量的参数化表示分别为<span class="math inline">\(r_1\)</span>和<span class="math inline">\(r_2\)</span>，那么有： <span class="math display">\[
\begin{equation}
r=F_1r_1=F_2r_2
\end{equation}
\]</span> 由此可以得到两个坐标系下对同一个向量参数化表示的转换关系： <span class="math display">\[
r_2=F_2^\top F_1r_1=C_{21}r_1
\]</span> 上式中<span class="math inline">\(C_{21}\)</span>即为所谓的方向余弦矩阵。</p>
<p>三维矢量<span class="math inline">\(a\)</span>与<span class="math inline">\(b\)</span>的点乘可以表示为在坐标系<span class="math inline">\(F_1\)</span>中的参数化表示<span class="math inline">\(a_1\)</span>与<span class="math inline">\(b_1\)</span>的点乘： <span class="math display">\[
\begin{equation}
&lt;a,b&gt;=\left(F_1a_1\right)^\top\left(F_1b_1\right)=a_1^\top F_1^\top F_1b_1=&lt;a_1,b_1&gt;
\end{equation}
\]</span> 三维矢量叉乘： <span class="math display">\[
\begin{equation}
\begin{aligned}
a\times b&amp;=\left(F_1a_1\right)\times\left(F_1b_1\right)\\
&amp;=\left(a_{11}e_{11}+a_{12}e_{12}+a_{13}e_{13}\right)\times\left(b_{11}e_{11}+b_{12}e_{12}+b_{13}e_{13}\right)\\
&amp;=F_1a_1^\times b_1
\end{aligned}
\end{equation}
\]</span></p>
<h3 id="线运动">线运动</h3>
<h4 id="位置">位置</h4>
<p>对一个矢量进行求导的过程中，首先要确定要在那个坐标系下进行观测。比如与坐标系<span class="math inline">\(F_1\)</span>固连的观测者，观察坐标系<span class="math inline">\(F_1\)</span>时，<span class="math inline">\(F_1\)</span>不随时间发生变化，即： <span class="math display">\[
\left.\frac{\text dF_1}{\text dt}\right|_{F_1}=0
\]</span> 但是如果一个坐标系<span class="math inline">\(F_2\)</span>相对<span class="math inline">\(F_1\)</span>以一定的角速度<span class="math inline">\(\omega_{21}\)</span>旋转，对于与坐标系<span class="math inline">\(F_1\)</span>固连的观测者，<span class="math inline">\(F_2\)</span>对时间的导数为 <span class="math display">\[
\left.\frac{\text dF_2}{\text dt}\right|_{F_1}=\omega_{21}^{\times}F_2
\]</span> 假设向量<span class="math inline">\(r\)</span>在坐标系<span class="math inline">\(F_1\)</span>和<span class="math inline">\(F_2\)</span>中向量的参数化表示分别为<span class="math inline">\(r_1\)</span>和<span class="math inline">\(r_2\)</span>，那么有： <span class="math display">\[
\begin{equation}
\begin{aligned}
\left.\frac{\text dr}{\text dt}\right|_{F_1}&amp;=F_1\dot{r}_1=\left.\frac{\text dF_2r_2}{\text dt}\right|_{F_1}\\
&amp;=\left.\frac{\text dF_2}{\text dt}\right|_{F_1}r_2+F_2\dot{r}_2\\
&amp;=\omega_{21}^{\times}F_2r_2+F_2\dot{r}_2\\
&amp;=\omega_{21}^{\times}r+F_2\dot{r}_2\\
&amp;=F_2{\omega_2^{21}}^{\times}r_2+F_2\dot{r}_2\\
\Rightarrow \dot{r}_1&amp;=C_{12}\left({\omega_2^{21}}^{\times}r_2+\dot{r}_2\right)
\end{aligned}
\end{equation}
\]</span> 上式中<span class="math inline">\(\omega_2^{21}\)</span>为角速度<span class="math inline">\(\omega_{21}\)</span>在<span class="math inline">\(F_2\)</span>中的参数化表示。右边括号中第一项为坐标系角运动带来的速度，第二项为当地速度。上式确定了两个坐标系中本地观测到点的运动速度之间的转化关系。</p>
<h4 id="速度">速度</h4>
<p>为了确定两个坐标系中观测到的加速度之间的转化关系，同样假设向量<span class="math inline">\(r\)</span>在坐标系<span class="math inline">\(F_1\)</span>和<span class="math inline">\(F_2\)</span>中向量的参数化表示分别为<span class="math inline">\({r}_1\)</span>和<span class="math inline">\({r}_2\)</span>，那么有： <span class="math display">\[
\begin{equation}
\begin{aligned}
\left.\frac{\text d^2r}{\text dt^2}\right|_{F_1}&amp;=F_1\ddot{r}_1=\left.\frac{\text d^2F_2{r}_2}{\text dt^2}\right|_{F_1}\\
&amp;=\left.\frac{\text d\omega_{21}^{\times}F_2r_2+F_2\dot{r}_2}{\text dt}\right|_{F_1}\\
&amp;=\dot{\omega}_{21}^{\times}F_2r_2+\omega_{21}^{\times}\omega_{21}^{\times}F_2r_2+\omega_{21}^{\times}F_2\dot{r}_2+\omega_{21}^{\times}F_2\dot{r}_2+F_2\ddot{r}_2\\
&amp;=F_2{\dot{\omega}_{2}^{21}}^{\times}r_2+F_2{\omega_2^{21}}^{\times}{\omega_2^{21}}^{\times}r_2+2F_2{\omega_2^{21}}^{\times}\dot{r}_2+F_2\ddot{r}_2\\
\Rightarrow \ddot{r}_1&amp;=C_{12}\left({\dot{\omega}_{2}^{21}}^{\times}{r}_2+{\omega_2^{21}}^{\times}{\omega_2^{21}}^{\times}r_2+2{\omega_2^{21}}^{\times}\dot{r}_2+\ddot{r}_2\right)
\end{aligned}
\end{equation}
\]</span> 上式中右边括号中第一项为坐标系角加速度带来的切向加速度，第二项为离心加速度，第三项为科氏加速度，最后一项为当地加速度。</p>
<h3 id="角运动">角运动</h3>
<h4 id="表示法">表示法</h4>
]]></content>
      <categories>
        <category>Theory</category>
      </categories>
      <tags>
        <tag>Machinery</tag>
      </tags>
  </entry>
  <entry>
    <title>缘起</title>
    <url>/2024/12/21/brief/</url>
    <content><![CDATA[<p>作为个人系列博客的开篇，讨论写这些博客的目的。</p>
<span id="more"></span>
<p>正经人谁写日记啊，同样，正经人谁写博客啊！作为一个不正经的打工人，时时碰到钉子。真的有必要记录下自己会什么、自己研究过什么、自己实现过什么以及自己关注过什么。</p>
<p>作为一个GNC专业的从业者，保持学习的状态非常重要。最近15年左右的时间，GNC领域发生了翻天覆地的变化。特别是自动驾驶系统研发的极速推进，为GNC领域注入了非常丰富的血液。所幸笔者工作的内容与自动驾驶有所关联，因此也在这一轮浪潮中有些许的心得。但是这个系统过于庞大，笔者做过控制（Control），也研发过导航系统（Navigation），同时也涉猎过制导（Guidance），所学过于斑杂，时时有不胜脑力之感。古人云：“好记性不如烂笔头”，因此希望在这个博客里面把自己做过的工作，学过的知识，研究过的论文整理一下，以便与志同道合者探讨，予有志者参考。</p>
<p>特别地，自动驾驶系统的GNC问题，包括全局路径规划/局部路径规划/定位/控制等几个方面的内容，其中全局路径规划与全局地图有关系，局部路径规划问题与感知紧密相连，是全局路径在当前环境下的一个子问题，定位问题涉及到多传感器融合，控制则根据局部路径规划与定位的结果生成最后的控制指令，实现转向/加减速动作完成对局部轨迹的跟踪，最后完成全局路径规划的任务。</p>
<p>笔者主要的工作内容与定位与控制有关系，对于全局任务与局部任务有所涉猎，目前还在学习之中。从数学上来讲，GNC问题可以表述为最优路径/最优估计/最优控制，当然最优只存在与理论与书本上，工程只能做到很有限的水平。本博客将从基础的理论开始，详细地介绍里程计/SLAM/控制算法等内容，同时也会记录路径规划方面的学习笔记。如果顺利，本博客将会以工程实现视觉/雷达SLAM、基于仿真平台的控制算法作为目标，同时也会记录一些规划方面的论文代码实现（不一定是工程上可用的）。</p>
<p>博客的更新通常会在周末，正好作为一周的总结，内容不定。</p>
]]></content>
  </entry>
  <entry>
    <title>代码风格</title>
    <url>/2024/12/22/code_style/</url>
    <content><![CDATA[<p>笔者在平时多数时候使用C/C++作为工作编程语言，为了规范后续文章中的代码块风格，这里介绍代码风格。只要按照合理的风格，<strong><em>一以贯之</em></strong>，最终成品总不至于差到哪里去。</p>
<span id="more"></span>
<p>命名宜使用英文，确保言简意赅，有公认的简写，可以用简写。命名与个人的习惯和积累有关系，这里主要还是想介绍一下我习惯的C/C++命名风格，以备日后时时注意。代码的缩进风格可以参考google的C++ format，这里就不再展开了。由于我们主要研究算法和理论方面的问题，对于代码风格不做过多的介绍。主要的原则如下：</p>
<ol type="1">
<li>类名和结构体名以大驼峰的方式标记。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">MyStruct</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>不论是普通函数还是某个类的成员函数，均以小驼峰的方式标记。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">doSomething</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyClass::doSomething</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>普通变量以小写加下划线的方式标记，类或者结构体的成员变量在此基础上多写一个下划线作为结尾以便区分。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> not_class_member;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>&#123;</span><br><span class="line">  <span class="type">int</span> class_member_;</span><br><span class="line">  <span class="type">static</span> MyClass* another_my_class_;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>枚举类为统一写法，都按照C++11的标准来定义，枚举名同类一样，标记为大驼峰形式，枚举的成员标记为大驼峰（主要是笔者认为这样写更紧凑，也容易区分枚举定义的不同模式）。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum class</span> <span class="title class_">Color</span>&#123;</span><br><span class="line">    PaleGreen,</span><br><span class="line">    DarkRed,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>在泛型编程的时候，类型名遵从类的命名规则，参数名遵从普通变量的命名规则。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T,<span class="type">int</span> d&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassHasVec</span>&#123;</span><br><span class="line">  Eigen::Matrix&lt;T,d,<span class="number">1</span>&gt; my_vec_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Status,<span class="keyword">typename</span> Value,<span class="type">int</span> idx_row,<span class="type">int</span> idx_col,<span class="type">int</span> value_row,<span class="type">int</span> value_col&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassHasMat</span>&#123;</span><br><span class="line">    Eigen::Matrix&lt;Status,idx_row,idx_col&gt; status_;</span><br><span class="line">    Eigen::Matrix&lt;Value,value_row,value_col&gt; value_;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>文件夹命名为小驼峰形似，文件命名为小写下划线形式。 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| -- include</span><br><span class="line">     | -- myClass</span><br><span class="line">          |-- my_class.h</span><br></pre></td></tr></table></figure></li>
<li>单行/多行注释均按照C++风格。 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// comment</span></span><br><span class="line"><span class="comment">// another commet</span></span><br></pre></td></tr></table></figure></li>
<li>缩进，行宽和其他一些格式上面的问题，因人而异，选择自己喜欢的一种即可，放入IDE即可自动管理代码格式。</li>
</ol>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>汽车运动学与动力学</title>
    <url>/2024/12/24/vehicle_dynamics/</url>
    <content><![CDATA[<p>为了后续介绍车辆的控制算法，开篇先讨论汽车的动力学模型。</p>
<span id="more"></span>
<h3 id="车辆平面动力学">车辆平面动力学</h3>
<p>车辆平面动力学讨论车辆在平面中的三自由度动力学模型，按照模型的简化程度，可以分为三自由度单轨车辆动力学模型和三自由度双轨车辆动力学模型。三自由度模型忽略了俯仰，侧倾和垂向动态，保留了车辆纵向和侧向运动的主要特征，为研究车辆平面运动提供了足够精确的近似。</p>
<h4 id="两轮模型">两轮模型</h4>
<p>为简单起见，我们先看下单轨车辆动力学模型：</p>
<p><img src="/2024/12/24/vehicle_dynamics/two_wheel_dynamic.png" height="300"></p>
<p>图中<span class="math inline">\(F_{xf},F_{yf},F_{xr},F_{yr}\)</span>分别为车辆前后轮的纵向力和侧向力，车辆质心处的速度为<span class="math inline">\(v\)</span>，其在车辆纵向与侧向的投影分别为<span class="math inline">\(v_x,v_y\)</span>，质心距离前后轮中心的距离分别为<span class="math inline">\(l_x,l_y\)</span>，车辆的前轮转角为<span class="math inline">\(\delta\)</span>，前后轮的轮胎侧偏角分别为<span class="math inline">\(\alpha_r,\alpha_f\)</span>，物理意义为车轮轴向与车轮中心速度的夹角，<span class="math inline">\(\gamma\)</span>为车身的横摆角速度。</p>
<p>根据动力学定律，不难得到车辆的三自由度动力学方程如下： <span class="math display">\[
\begin{equation}
\begin{aligned}
m\dot{v}_x&amp;=F_{xr}+F_{xf}\cos\delta-F_{yf}\sin\delta\\
m\dot{v}_y&amp;=F_{yr}+F_{xf}\sin\delta+F_{yf}\cos\delta\\
I\dot{\gamma}&amp;=-F_{yr}l_r+\left(F_{xf}\sin\delta+F_{yf}\cos\delta\right)l_f
\end{aligned}
\end{equation}
\]</span> 下面来确定上述方程各个力的具体表达式。假设车辆为前驱，那么有前、后轮的动力学模型如下： <span class="math display">\[
\begin{equation}
\begin{aligned}
\dot{\omega}_r&amp;=-\frac{T_{br}}{J_w}-\frac{F_{xr}R_w}{J_w}\\
\dot{\omega}_f&amp;=\frac{T_{df}-T_{bf}}{J_w}-\frac{F_{xf}R_w}{J_w}
\end{aligned}
\end{equation}
\]</span></p>
<p>式中<span class="math inline">\(T_{br},T_{bf}\)</span>分别为前后轮胎的制动力矩，<span class="math inline">\(T_{df}\)</span>为前轮的驱动力矩，<span class="math inline">\(R_w\)</span>为车轮半径，<span class="math inline">\(J_w\)</span>为车轮转动惯量。对上式进行移项操作，不难得到<span class="math inline">\(F_{xf},F_{xr}\)</span>的表达式如下： <span class="math display">\[
\begin{equation}
\begin{aligned}
F_{xr}&amp;=-\frac{J_w}{R_w}\dot{\omega}_r-\frac{T_{br}}{R_w}\\
F_{xf}&amp;=-\frac{J_w}{R_w}\dot{\omega}_f+\frac{T_{df}-T_{bf}}{R_w}
\end{aligned}
\end{equation}
\]</span> 采用线性轮胎力模型，且符合小轮胎侧偏角假设的前提下，可以认为，轮胎的侧向力符合如下关系式： <span class="math display">\[
\begin{equation}
\begin{aligned}
F_{yr}&amp;=C_r\alpha_r=C_r\frac{l_r\gamma-v_y}{v_x}\\
F_{yf}&amp;=C_f\alpha_f=C_f(\delta-\frac{l_f\gamma+v_y}{v_x})
\end{aligned}
\end{equation}
\]</span> 式中<span class="math inline">\(C_f,C_r\)</span>为前后轮胎的侧偏刚度系数。</p>
<p>将上述力/力矩带入车辆的三自由度动力学方程，可得车辆的动力学模型如下： <span class="math display">\[
\begin{equation}
\begin{aligned}
m\dot{v}_x&amp;=F_{xr}+F_{xf}\cos\delta-F_{yf}\sin\delta\\
m\dot{v}_y&amp;=F_{yr}+F_{xf}\sin\delta+F_{yf}\cos\delta\\
I\dot{\gamma}&amp;=-F_{yr}l_r+\left(F_{xf}\sin\delta+F_{yf}\cos\delta\right)l_f
\end{aligned}
\end{equation}
\]</span></p>
<h4 id="四轮模型">四轮模型</h4>
<h3 id="车辆运动学">车辆运动学</h3>
<h4 id="两轮模型-1">两轮模型</h4>
<h4 id="四轮模型-1">四轮模型</h4>
]]></content>
      <categories>
        <category>Theory</category>
      </categories>
      <tags>
        <tag>Machinery</tag>
      </tags>
  </entry>
</search>

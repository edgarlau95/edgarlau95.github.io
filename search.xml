<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Code Style</title>
    <url>/2024/12/22/codeStyle/</url>
    <content><![CDATA[<p>This post lists some code styles that I obey in the daily routines. If there are any code fragements in those style, this post will help. Usually, I use C/C++ and Python3, the standard uses C++ as example, but works as well in Python3.</p>
<span id="more"></span>
<ol type="1">
<li>Variable name is typed in lower case and underlines, if it's a member of a class or structure, we type a extra underline as an end: <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">uint8_t</span> age;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>&#123;</span><br><span class="line">    <span class="type">bool</span> is_old_;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>Class(structure) name is typed in upper case and camel style: <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">GeoFeature</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Map</span>&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    GeoFeature geo_feature_;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>Enumerate name is typed the same as class, the elements of which is in upper case and camel style: <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum class</span> <span class="title class_">Color</span>&#123;</span><br><span class="line">    PaleGreen,</span><br><span class="line">    DarkRed,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>Function name is write in lower case camel style: <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> ... Key;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getKey</span><span class="params">(Key&amp; key)</span></span>;</span><br><span class="line"><span class="type">void</span> GeoFeature&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">getKey</span><span class="params">(Key&amp; key)</span> <span class="type">const</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>In C++ Template, we use upper case camel style typing typename and use lower case and underlines style name as parameters <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Idx,<span class="keyword">typename</span> Value,<span class="type">int</span> idx_row,<span class="type">int</span> idx_col,<span class="type">int</span> value_row,<span class="type">int</span> value_col&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Matrix</span>&#123;</span><br><span class="line">    Eigen::Matrix&lt;Idx,idx_row,idx_col&gt; idx;</span><br><span class="line">    Eigen::Matrix&lt;Value,value_row,value_col&gt; value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Folder name is in upper camel style, and file name is in lower camel style.</li>
<li>indent, line change, max line length style and other rules are base on google format: <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">Language:</span>        <span class="string">Cpp</span></span><br><span class="line"><span class="comment"># BasedOnStyle:  Google</span></span><br><span class="line"><span class="attr">AccessModifierOffset:</span> <span class="number">-1</span></span><br><span class="line"><span class="attr">AlignAfterOpenBracket:</span> <span class="string">Align</span></span><br><span class="line"><span class="attr">AlignArrayOfStructures:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlignConsecutiveMacros:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlignConsecutiveAssignments:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlignConsecutiveBitFields:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlignConsecutiveDeclarations:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlignEscapedNewlines:</span> <span class="string">Left</span></span><br><span class="line"><span class="attr">AlignOperands:</span>   <span class="string">Align</span></span><br><span class="line"><span class="attr">AlignTrailingComments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AllowAllArgumentsOnNextLine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AllowAllParametersOfDeclarationOnNextLine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AllowShortEnumsOnASingleLine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AllowShortBlocksOnASingleLine:</span> <span class="string">Never</span></span><br><span class="line"><span class="attr">AllowShortCaseLabelsOnASingleLine:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">AllowShortFunctionsOnASingleLine:</span> <span class="string">All</span></span><br><span class="line"><span class="attr">AllowShortLambdasOnASingleLine:</span> <span class="string">All</span></span><br><span class="line"><span class="attr">AllowShortIfStatementsOnASingleLine:</span> <span class="string">WithoutElse</span></span><br><span class="line"><span class="attr">AllowShortLoopsOnASingleLine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AlwaysBreakAfterDefinitionReturnType:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlwaysBreakAfterReturnType:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">AlwaysBreakBeforeMultilineStrings:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">AlwaysBreakTemplateDeclarations:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">AttributeMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">__capability</span></span><br><span class="line"><span class="attr">BinPackArguments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">BinPackParameters:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">BraceWrapping:</span></span><br><span class="line">  <span class="attr">AfterCaseLabel:</span>  <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterClass:</span>      <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterControlStatement:</span> <span class="string">Never</span></span><br><span class="line">  <span class="attr">AfterEnum:</span>       <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterFunction:</span>   <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterNamespace:</span>  <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterObjCDeclaration:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterStruct:</span>     <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterUnion:</span>      <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterExternBlock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">BeforeCatch:</span>     <span class="literal">false</span></span><br><span class="line">  <span class="attr">BeforeElse:</span>      <span class="literal">false</span></span><br><span class="line">  <span class="attr">BeforeLambdaBody:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">BeforeWhile:</span>     <span class="literal">false</span></span><br><span class="line">  <span class="attr">IndentBraces:</span>    <span class="literal">false</span></span><br><span class="line">  <span class="attr">SplitEmptyFunction:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">SplitEmptyRecord:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">SplitEmptyNamespace:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">BreakBeforeBinaryOperators:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">BreakBeforeConceptDeclarations:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">BreakBeforeBraces:</span> <span class="string">Attach</span></span><br><span class="line"><span class="attr">BreakBeforeInheritanceComma:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">BreakInheritanceList:</span> <span class="string">BeforeColon</span></span><br><span class="line"><span class="attr">BreakBeforeTernaryOperators:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">BreakConstructorInitializersBeforeComma:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">BreakConstructorInitializers:</span> <span class="string">BeforeColon</span></span><br><span class="line"><span class="attr">BreakAfterJavaFieldAnnotations:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">BreakStringLiterals:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">ColumnLimit:</span>     <span class="number">100</span></span><br><span class="line"><span class="attr">CommentPragmas:</span>  <span class="string">&#x27;^ IWYU pragma:&#x27;</span></span><br><span class="line"><span class="attr">QualifierAlignment:</span> <span class="string">Leave</span></span><br><span class="line"><span class="attr">CompactNamespaces:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">ConstructorInitializerIndentWidth:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">ContinuationIndentWidth:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">Cpp11BracedListStyle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">DeriveLineEnding:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">DerivePointerAlignment:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">DisableFormat:</span>   <span class="literal">false</span></span><br><span class="line"><span class="attr">EmptyLineAfterAccessModifier:</span> <span class="string">Never</span></span><br><span class="line"><span class="attr">EmptyLineBeforeAccessModifier:</span> <span class="string">LogicalBlock</span></span><br><span class="line"><span class="attr">ExperimentalAutoDetectBinPacking:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">PackConstructorInitializers:</span> <span class="string">NextLine</span></span><br><span class="line"><span class="attr">BasedOnStyle:</span>    <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">ConstructorInitializerAllOnOneLineOrOnePerLine:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">AllowAllConstructorInitializersOnNextLine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">FixNamespaceComments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">ForEachMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">foreach</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Q_FOREACH</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">BOOST_FOREACH</span></span><br><span class="line"><span class="attr">IfMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">KJ_IF_MAYBE</span></span><br><span class="line"><span class="attr">IncludeBlocks:</span>   <span class="string">Regroup</span></span><br><span class="line"><span class="attr">IncludeCategories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Regex:</span>           <span class="string">&#x27;^&lt;ext/.*\.h&gt;&#x27;</span></span><br><span class="line">    <span class="attr">Priority:</span>        <span class="number">2</span></span><br><span class="line">    <span class="attr">SortPriority:</span>    <span class="number">0</span></span><br><span class="line">    <span class="attr">CaseSensitive:</span>   <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Regex:</span>           <span class="string">&#x27;^&lt;.*\.h&gt;&#x27;</span></span><br><span class="line">    <span class="attr">Priority:</span>        <span class="number">1</span></span><br><span class="line">    <span class="attr">SortPriority:</span>    <span class="number">0</span></span><br><span class="line">    <span class="attr">CaseSensitive:</span>   <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Regex:</span>           <span class="string">&#x27;^&lt;.*&#x27;</span></span><br><span class="line">    <span class="attr">Priority:</span>        <span class="number">2</span></span><br><span class="line">    <span class="attr">SortPriority:</span>    <span class="number">0</span></span><br><span class="line">    <span class="attr">CaseSensitive:</span>   <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Regex:</span>           <span class="string">&#x27;.*&#x27;</span></span><br><span class="line">    <span class="attr">Priority:</span>        <span class="number">3</span></span><br><span class="line">    <span class="attr">SortPriority:</span>    <span class="number">0</span></span><br><span class="line">    <span class="attr">CaseSensitive:</span>   <span class="literal">false</span></span><br><span class="line"><span class="attr">IncludeIsMainRegex:</span> <span class="string">&#x27;([-_](test|unittest))?$&#x27;</span></span><br><span class="line"><span class="attr">IncludeIsMainSourceRegex:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">IndentAccessModifiers:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">IndentCaseLabels:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">IndentCaseBlocks:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">IndentGotoLabels:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">IndentPPDirectives:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">IndentExternBlock:</span> <span class="string">AfterExternBlock</span></span><br><span class="line"><span class="attr">IndentRequires:</span>  <span class="literal">false</span></span><br><span class="line"><span class="attr">IndentWidth:</span>     <span class="number">2</span></span><br><span class="line"><span class="attr">IndentWrappedFunctionNames:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">InsertTrailingCommas:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">JavaScriptQuotes:</span> <span class="string">Leave</span></span><br><span class="line"><span class="attr">JavaScriptWrapImports:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">KeepEmptyLinesAtTheStartOfBlocks:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">LambdaBodyIndentation:</span> <span class="string">Signature</span></span><br><span class="line"><span class="attr">MacroBlockBegin:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">MacroBlockEnd:</span>   <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">MaxEmptyLinesToKeep:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">NamespaceIndentation:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">ObjCBinPackProtocolList:</span> <span class="string">Never</span></span><br><span class="line"><span class="attr">ObjCBlockIndentWidth:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">ObjCBreakBeforeNestedBlockParam:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">ObjCSpaceAfterProperty:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">ObjCSpaceBeforeProtocolList:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">PenaltyBreakAssignment:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">PenaltyBreakBeforeFirstCallParameter:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">PenaltyBreakComment:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">PenaltyBreakFirstLessLess:</span> <span class="number">120</span></span><br><span class="line"><span class="attr">PenaltyBreakOpenParenthesis:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">PenaltyBreakString:</span> <span class="number">1000</span></span><br><span class="line"><span class="attr">PenaltyBreakTemplateDeclaration:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">PenaltyExcessCharacter:</span> <span class="number">1000000</span></span><br><span class="line"><span class="attr">PenaltyReturnTypeOnItsOwnLine:</span> <span class="number">200</span></span><br><span class="line"><span class="attr">PenaltyIndentedWhitespace:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">PointerAlignment:</span> <span class="string">Left</span></span><br><span class="line"><span class="attr">PPIndentWidth:</span>   <span class="number">-1</span></span><br><span class="line"><span class="attr">RawStringFormats:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Language:</span>        <span class="string">Cpp</span></span><br><span class="line">    <span class="attr">Delimiters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CC</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cpp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Cpp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CPP</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;c++&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;C++&#x27;</span></span><br><span class="line">    <span class="attr">CanonicalDelimiter:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="attr">BasedOnStyle:</span>    <span class="string">google</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">Language:</span>        <span class="string">TextProto</span></span><br><span class="line">    <span class="attr">Delimiters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pb</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PB</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">proto</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PROTO</span></span><br><span class="line">    <span class="attr">EnclosingFunctions:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EqualsProto</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">EquivToProto</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PARSE_PARTIAL_TEXT_PROTO</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PARSE_TEST_PROTO</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PARSE_TEXT_PROTO</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ParseTextOrDie</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ParseTextProtoOrDie</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ParseTestProto</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ParsePartialTestProto</span></span><br><span class="line">    <span class="attr">CanonicalDelimiter:</span> <span class="string">pb</span></span><br><span class="line">    <span class="attr">BasedOnStyle:</span>    <span class="string">google</span></span><br><span class="line"><span class="attr">ReferenceAlignment:</span> <span class="string">Pointer</span></span><br><span class="line"><span class="attr">ReflowComments:</span>  <span class="literal">true</span></span><br><span class="line"><span class="attr">RemoveBracesLLVM:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SeparateDefinitionBlocks:</span> <span class="string">Leave</span></span><br><span class="line"><span class="attr">ShortNamespaceLines:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">SortIncludes:</span>    <span class="string">CaseSensitive</span></span><br><span class="line"><span class="attr">SortJavaStaticImport:</span> <span class="string">Before</span></span><br><span class="line"><span class="attr">SortUsingDeclarations:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceAfterCStyleCast:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceAfterLogicalNot:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceAfterTemplateKeyword:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceBeforeAssignmentOperators:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceBeforeCaseColon:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceBeforeCpp11BracedList:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceBeforeCtorInitializerColon:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceBeforeInheritanceColon:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceBeforeParens:</span> <span class="string">ControlStatements</span></span><br><span class="line"><span class="attr">SpaceBeforeParensOptions:</span></span><br><span class="line">  <span class="attr">AfterControlStatements:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">AfterForeachMacros:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">AfterFunctionDefinitionName:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterFunctionDeclarationName:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">AfterIfMacros:</span>   <span class="literal">true</span></span><br><span class="line">  <span class="attr">AfterOverloadedOperator:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">BeforeNonEmptyParentheses:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceAroundPointerQualifiers:</span> <span class="string">Default</span></span><br><span class="line"><span class="attr">SpaceBeforeRangeBasedForLoopColon:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpaceInEmptyBlock:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceInEmptyParentheses:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpacesBeforeTrailingComments:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">SpacesInAngles:</span>  <span class="string">Never</span></span><br><span class="line"><span class="attr">SpacesInConditionalStatement:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpacesInContainerLiterals:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">SpacesInCStyleCastParentheses:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpacesInLineCommentPrefix:</span></span><br><span class="line">  <span class="attr">Minimum:</span>         <span class="number">1</span></span><br><span class="line">  <span class="attr">Maximum:</span>         <span class="number">-1</span></span><br><span class="line"><span class="attr">SpacesInParentheses:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpacesInSquareBrackets:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SpaceBeforeSquareBrackets:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">BitFieldColonSpacing:</span> <span class="string">Both</span></span><br><span class="line"><span class="attr">Standard:</span>        <span class="string">Auto</span></span><br><span class="line"><span class="attr">StatementAttributeLikeMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Q_EMIT</span></span><br><span class="line"><span class="attr">StatementMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Q_UNUSED</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">QT_REQUIRE_VERSION</span></span><br><span class="line"><span class="attr">TabWidth:</span>        <span class="number">8</span></span><br><span class="line"><span class="attr">UseCRLF:</span>         <span class="literal">false</span></span><br><span class="line"><span class="attr">UseTab:</span>          <span class="string">Never</span></span><br><span class="line"><span class="attr">WhitespaceSensitiveMacros:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">STRINGIZE</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">PP_STRINGIZE</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">BOOST_PP_STRINGIZE</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">NS_SWIFT_NAME</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">CF_SWIFT_NAME</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>programming</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>rotation</title>
    <url>/2024/12/20/quaternion/</url>
    <content><![CDATA[<p>This post is about the basic theory of ragid-body rotation, including the defination, manipulation and usage in ragid-body rotation representation of quaternion, direction cosine matrix and skew symertry matrix. We use Hamilton's notation of quaternion in this post. This post is the prerequest for our impending posts discussing the GNC problem.</p>
<span id="more"></span>
<p><span class="math inline">\(q=q_0+q_1i+q_2j+q_3k\)</span></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>rotation</tag>
      </tags>
  </entry>
</search>
